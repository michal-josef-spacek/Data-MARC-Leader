NAME
    Data::MARC::Leader - Data object for hash type.

SYNOPSIS
     use Data::MARC::Leader;

     my $obj = Data::MARC::Leader->new(%params);
     my $bibliographic_level = $obj->bibliographic_level;
     my $char_encoding_scheme = $obj->char_encoding_scheme;
     my $data_base_addr = $obj->data_base_addr;
     my $descriptive_cataloging_form = $obj->descriptive_cataloging_form;
     my $encoding_level = $obj->encoding_level;
     my $impl_def_portion_len = $obj->impl_def_portion_len;
     my $indicator_count = $obj->indicator_count;
     my $length = $obj->length;
     my $length_of_field_portion_len = $obj->length_of_field_portion_len;
     my $multipart_resource_record_level = $obj->multipart_resource_record_level;
     my $starting_char_pos_portion_len = $obj->starting_char_pos_portion_len;
     my $status = $obj->status;
     my $subfield_code_count = $obj->subfield_code_count;
     my $type = $obj->type;
     my $type_of_control = $obj->type_of_control;
     my $undefined = $obj->undefined;

METHODS
  "new"
     my $obj = Data::MARC::Leader->new(%params);

    Constructor.

    *       "bibliographic_level"

            Flag for activity of hash type. Possible valuea are 0/1. Default
            value is 1 (active).

            TODO

    Returns instance of object.

  "bibliographic_level"
     my $bibliographic_level = $obj->bibliographic_level;

    Get bibliographic level flag.

    Returns character.

    TODO

ERRORS
     new():
             TODO

EXAMPLE
     use strict;
     use warnings;

     use Data::MARC::Leader;

     my $obj = Data::MARC::Leader->new(
             'TODO' => 1,
     );

     # Print out.
     print 'Name: '.$obj->name."\n";

     # Output:
     # TODO

DEPENDENCIES
    Mo, Mo::utils, Readonly.

REPOSITORY
    <https://github.com/michal-josef-spacek/Data-MARC-Leader>

AUTHOR
    Michal Josef Špaček <mailto:skim@cpan.org>

    <http://skim.cz>

LICENSE AND COPYRIGHT
    © 2023 Michal Josef Špaček

    BSD 2-Clause License

VERSION
    0.01

